19.7.18(목)
오늘의 학습 목표
1. el & jstl
2. struts 문법
3. orm 프레임워크 (ibatis)
4. struts pojo - api 첨부
------------------------------
1.1. jsp의 Expression Language
	1-1 데이터 타입.
		EL의 데이터 타입은 총 5개가 있다. {boolean, 정수, 실수, 문자열, null}
			boolean 타입 : T/F 가 있다.
			정수타입 : 십진수를 기본으로 정수로 사용한다. EL의 정수타입은 Long타입이다.
			실수타입 : 십진수를 기본으로 이루어져 있고, 소수점을 사용할 수 있고, 3.24e3과 같이 지수형으로 표현할 수 있다. Double타입
			문자열 타입 : 따옴표로 둘러싼 문자열. 따옴표를 표현하고 싶다면 \' , \"
			null 타입 : null

	1-2 수치 연산자
		{+,-,*,/(div),%(mod)} 자바와는 달리 수치연산자가 있으면 값을 정수,실수형으로 변환하여 처리한다.
			규칙은 다음과 같다....
			1.A연산자B 일 때 A혹은B가 문자열이라면 숫자로 변환해보고 안 되면(문자거나 하면) 에러를 낸다.
			2.A혹은B가 null이면 Long타입 0을 리턴한다.
			3.A혹은B가 BigDecimal이면 다른 하나를 BigDecimal로 변환하여 수행한다. (BigDecimal에 정의된 add(),subtract(),multiply() 사용)
			4.A혹은B가 Float,Double 혹은 실수값을 표현하는 문자열이면
				1.다른 하나가 BigInteger면 모두 BigDecimal로 변환하여 연산수행
				2.아니라면 Double로 형변환하여 연산 수행
			5.A혹은B가 BigInteger면 둘 다 BigInteger로 변환한 뒤 연산수행
			6.위가 전부 아니면 A와 B를 Long으로 변환 뒤 연산 수행
			7.위가 전부 아니면 exception
		* 나눗셈 같은 경우 Double로 형변환하여 계산한다. (BigDecimal이나 BigInteger가 아니라면) 나머지 계산도 비슷
	    비교 연산자
		== 는 eq , != 는 ne , < 는 lt , > 는 gt , <= 는 le , >= 는 ge 로 바꾸어 쓸 수 있다.
	    논리 연산자는 자바와 동일하다. && || !
	  ☆ empty 연산자 : empty <값> 으로 사용한다. null, 빈문자열"", 길이0배열, 빈 map, 빈 collection일 때 true를 반환
	1-3 표현문법.
		가. <%= %> 는 ${ } 와 같다
		나. EL에서는 "" 와 ''를 구분하지 않는다 (String과 char를 구분하지 않는다. 모두 문자열로 처리)
		다. null 타입은 표현하지 않는다.
		라. 스크립트릿에서 설정한 변수값을 받아 오고 싶으면 스크립트릿 안에 pageContext.setAttribute(이름,값)으로 전달할 수 있다.
		마. attribute 이름이 겹칠 때는 범위가 작은 scope의 것을 우선해서 받아온다. (page < request < session < application) scope를 명시해서 원하는 이름을 받아올 수 도 있다.
			ex) ${pageScope.msg}
		바. 자료구조를 받아왔다면 ${배열 혹은 자료구조[인덱스]}를 통해 값을 받아올 수 있다. 인덱스가 없는 셋같은 경우 객체 자체를 뽑으면 값을 담아서 넘겨주지만 (toString형태로)
			각각의 값을 받아오긴 어렵다. map같은 경우 키로 받아올 수 있다.(.get(키값)메소드). 집적 만든 Dto나 Vo 같은 경우 ${이름.필드명} 으로 뽑아올 수 있다. (같은 이름의 getter를 호출하는 방식)

1.2. JSTL Javaserver page Standard Tag Library
	JSTL 은 standard 의 서브모듈이므로 둘다 받아야함
	JSTL 경로 : apache 홈페이지 -> Tomcat -> 메뉴중 Taglibs
	스탠다드 경로 : maven repository 홈페이지-> standard 검색 -> 다운로드

	jsp에 삽입하는 법 : <@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
	prefix는 앞으로 c태그로 이 라이브러리를 사용하겠다는 의미인데 프로그래머들간의 규칙이므로 안 바꾸는게 좋음

	1-1 jstl의 문법
	<c:out> value를 출력한다. attribute인 value가 null이면 태그 사이의 내용이 출력된다.value는 문자열이므로 다른 타입을 넣고 싶다면 EL표현식 활용
	<c:set> scope에 변수를 담는다. attribute로 <var="이름" value="값" scope="스코프범위">가 있다. scope의 default 는 page
	<c:if> if 조건문. attribute : test="${조건연산자 활용}" 로 조건을 준다. 
		!주의 : c:if태그에는 else가 없다. 잘 짜보자
	<c:choose> switch 조건문. case들은 하위 태그 <c:when test="조건"> 으로 주고, 디폴트는 <c:otherwise>를 통해 준다.
	<c:foreach> foreach문. attribute로 begin="시작인덱스" end="끝인덱스" step="증가량" var="증가인덱스 변수명 지정" varStatus="status" foreach문 객체 자체,status에 넣어줌
	while문처럼 쓰고싶을 때 : attribute로 items="자료구조" var="msg" foreach문의 value처럼 var을 사용하면 되는데, 인덱스는요?? varStatus 선언하고 status.index 를 통해 index를 쓰자.
				자료구조가 map일때는 var이 키와 벨류값 세트를 출력해 버리는데, var이름.key 혹은 value를 통해 키값, 벨류값을 출력시킬 수 있다.
	<c:forTokens> attribute로 items="문자열" 와 delims="구분자"와 var을 받음. 문자열을 구분자로 나눈 배열로 만든뒤 해당 숫자만큼 반복시켜줌.
	<c:url> url객체를 만들어줌. var="객체이름" value="url주소" 하위태그로 <c:param name="이름" value="값">을 통해 파라미터를 객체에 삽입할 수 있음.
	<c:import url="https://www.daum.net"></c:import> 페이지 자체를 임포트해온다.
	<c:redirect> 리다이렉트 시키기
	<c:remove> attribute 지우기

**구글에서 SQL DEVELOPER 3.2.2 검색, 입력 후 다운로드.
*view에서 자바코드는 최대한 빼는 추세. jstl과 el활용

이클립스 메모리 늘리는 방법 : 
이클립스 폴더위치 열기 -> eclipse.ini 메모장 열기 -> -xms원하는최소메모리m -xmx원하는최대메모리m 수정

메이븐 cmd상에서 webapp 선택하는 법 : mvn archetype:generate -Dfilter=그룹아이디:검색어 (검색어는 필수)
org.apache.maven.archetypes:maven-archetype-webapp 선택