19.3.28(목)
식별자 : 변수,상수,메소드,배열,문자열,사용자가 정의한 클래스나 메소드 등을 구분할 수 있는 이름
1. 식별자는 문자, 숫자, 특문(_와$만)으로 구성될 수 있다.
2. 식별자의 첫 문자는 문자나 특수문자로 시작할 수 있다. 숫자는 안돼
3. 예약어를 식별자로 사용할 수 없음 (true,false,null을 식별자로 쓸 수 없음
4. 길이에 제한을 두지 않는다.
5. 같은 문자의 대소문자(Sum과 sum)는 서로 다른 식별자로 취급한다.
6. 클래스이름 첫글자 대문자, 메소드 변수 등 첫글자 소문자, 상수는 전체글자 대문자


클래스 이름 명명규칙.
1.첫글자는 영문 대문자로 시작한다.
2.띄어쓰기,특수문자 불가(_와$는 가능)
3.단어와 단어의 조합 명명은 두번째 단어의 첫글자를 대문자로 한다.
4.//이후는 주석, 에러가 나서 소스코드를 수정할 때 의심가는 
소스코드 앞을 //로 처리해서 일시적으로 제외하는 방법이 있음.(지웠다가 다시 치는 대신)
5.	/* 여러줄 주석치고 싶을 때
	*/
6.주석은 컴파일시에 제외되기때문에 주석을 아무리 많이 달더라도 컴파일된 파일의 메모리는 커지지 않음
7.항상 주석을 다는 습관을 가지자
8.프로그래머끼리의 규칙들을 중요히 생각하자

변수명을 지정하는 규칙
1.변수명 첫글자는 영문자나 일부특수문자($_)만 가능
2.변수명에는 숫자가 포함될 수 있다
3.변수명에는 공백이 포함될 수 없다
4.대소문자를 구분한다
5.예약어는 사용할 수 없다
자바 명령어
System.out.println(); = 괄호안의 내용을 출력하고 한줄 띄어써라, 아무것도 안 적으면 개행. 
System.out.print(); = 괄호안의 내용을 출력하라, 아무것도 안 적으면 에러

자바 사칙연산자
 -종류 : + - * / %
 -규칙 : 정수 연산자 정수 = 정수 (이때문에 정수와 정수의 나눗셈은 나머지를 버린 정수부분만 나옴)
	 실수 연산자 실수 = 실수
	 정수 연산자 실수 = 실수

문자는 ''(무조건 한글자,띄어쓰기도 가능), 문자열은 "" (여러글자지만 0글자,1글자도 문자열이 될 수 있음, 단 개행은 안됨)
 ''안에 오는 문자는 유니코드상의 정수로도 쓰임.

	 문자열 + 문자열 = 문자열, 문자열+문자,숫자 등 다른타입 = 문자열
	 문자+문자 = 숫자, 문자+숫자 = 숫자,
	ex) System.out.println(2000+19+"년");
	    System.out.println("year"+2000+19);
		결과 = 2019년
		       year200019
원하는 결과를 얻으려면.. System.out.println("year"+(2000+19));

변수의 선언 (변수의 저장공간 확보) 이후에 반드시 변수를 초기화 해야함. (기존 메모리에 남아있던 쓰레기 값이 변수에 부여될 수 있기 때문)

자료형의 종류
 기본자료형    - 정수형 : byte, short, long, int, long ,char
 (Primitive type)- 실수형 : float, double
	       - 논리형 : boolean
 참조자료형    - 클래스형
 (Reference type)-인터페이스형
		-배열형
		-열거형

*실수형 : 컴퓨터는 실수형을 표현할 수 없음. 0.00000000001000000.....뒤에 무한대로 오는 0값을 감당할 수 없기때문에. 그래서 float와 double같은 실수형은 1.2482357567 x 10^8같은식으로
가수 x 지수(자릿수)같은 식으로 최대한 많은 범위의 실수를 표현 하는 것으로 대체함. 대신 오차범위가 생기고, 정확성이 떨어짐. 실수형을 표현할 때 일부비트는
 가수부분에 할당, 일부비트는 지수부분에 할당하는 식으로 메모리 활용. 그래서 같은 메모리를 사용하더라도 정수형보다 실수형이 커버할수 있는 coverage범위(자릿수)가 많은것. 
why? 정수형은 전체가 숫자를 표현하는데 메모리를 전부 할당하지만 실수형은 일부메모리를 10^x식으로 뭉뜽그리는 것에 사용하기 떄문에.

형변환 -자료형의 종류를 변환하는 것.  큰 것과 작은 것을 구분하는 것은 메모리가 아니라 데이터손실loss 의 발생여부임. 실수형이 정수형보다 데이터범위가 크기때문에 (바로 위 설명 참조)
					실수형을 정수형으로 형변환 할때 데이터 손실이 생김
	종류
	자동형변환(암시적) : 티안내고 하는거, 더 작은 것을 큰 것으로 형변환 할 때 가능.
	ex)double w;
		w = 3;
		System.out.println(w);
	console : 3.14

	강제형변환(명시적) - 티내고 하는거, 더 큰 것을 작은 것으로 형변환 할 때.
	ex)	double a = 3.14;
		int b;
		b=(int)a;
		System.out.println(b);
	console : 3
		System.out.println((char)97);
	console : a
			
	정  리   : ------------->>>---------자동형변환 ----------------->>>--------------------
		   byte(1) short(2) int(4) long(8) float(4) double(8) . . . long=>float인 이유? : float가 long보다 표현범위가 넓기때문에
		   -------------<<<---------강제형변환 -----------------<<<-------------------- *char는 가지는 상수값에 따라 다름.
			byte a =100;같은것은 상수인 100 이 int가 할당되므로 강제형변환이 필수인 상황이지만 byte,short을 선언하고 값을 할당할 때 예외적으로 다룸.


*2의보수 쉽게 구하는법 = 0과 1값을 다 뒤집고 1을 더해주면됨. Ex) 0100의 경우 =>1011로 뒤집고 1더하기 =>1100 / 1을 더해주는 이유는 사이에 끼어있는 0때문
*실수계산을 할때는 (100+210)/100.0 식으로 정수로 계산하고 실수로 나누는 것이 정확한 값을 얻어낼 수 있다.
*클래스 이름은 영문 대문자로 시작하는것이 바람직. 띄어쓰기, 숫자시작은 불가능. 
*notepad.exe Ex02.java = 메모장ex02를 만들어달라는 명령어
 set PATH= 명령어 를 사용할 시 주의사항 - 새로설정한 경로를 제외한 경로들은 사라짐(덮어씌워짐)
* \역슬래쉬. . . 폰트에 따라 \ 로 표현이 된다. 역슬래쉬 표기 : \b 백스페이스 \t 탭 \n 줄갈이 \f 다음페이지 \r CR \\ \표현 \' '표현 \" "표현 
윈도우에서만 개행시 \r\n 이렇게 해야 개행이 된다. 그러면 다른 운영체제 에서는 두번개행이 되기 때문에 애지간하면 println으로 해야 된다.
*상수도 자료형을 가지고 있다. 기본적으로 정수는 int, 실수는 double을 할당한다(cpu특성상). 그래서 float a = 3.14;하거나long a = 2147483648 하면 에러가 나게 되는데, 3.14f 로 2147483648l로 강제형변환함.
*github = 소스코드 공유사이트
* 1l|l oO0ㅇ등.. 폰트에 따라 다른글자가 같아보이는 경우를 주의해야한다. 