기존의 방법론 = waterfall(폭포수)모델
	분석>설계>개발>테스팅

애자일(Agile, 날렵한) 개발 방법론
	= 무계획도, 너무 빡빡한 계획도 아닌 실용주의적 방법론
	책에서는 스크럼 방식을 소개하고 있다.
	*스크럼 방식? : 스크럼은 특정 언어나 방법론에 의존적이지 않으며, 개발 언어는 물론이고 객체지향 언어와도 관련이 없는 넓은 응용 범위의 개발 기법이다. 스크럼은 애자일 소프트웨어 개발 과정의 하나로 다음과 같은 특성을 가지고 있다.
			솔루션에 포함할 기능/개선점에 대한 우선 순위를 부여한다.
			●개발 주기는 30일 정도로 조절하고 개발 주기마다 실제 동작할 수 있는 결과를 제공하라.
			●개발 주기마다 적용할 기능이나 개선에 대한 목록을 제공하라.
			●날마다 15분 정도 회의를 가져라.
			●항상 팀 단위로 생각하라.
			●원활한 의사소통을 위하여, 구분 없는 열린 공간을 유지하라.

	기존의 방법론에 에자일 방법론을 결합하면 빅엄브렐라 방법론이라 정의한다(에자일 방법론이 기존방법론을 감싸기 때문에, 폭포수모델을 4주의 이터레이션(iteration)으로 반복하는 것을 생각해보자)
	분석,설계,개발,테스팅 과정 각각을 다수의 이터레이션으로 반복(분석,설계,개발,테스팅을 각 과정마다) 하는 것임.
	분석단계의 이터레이션에서 개발을 어떻게 하느냐? 할 수 있지만 코드를 가지고 하는 것만이 개발이 아니고 데모타입 짜보기, 분석문서 작성하기 도 개발의 범주에 들어간다고 생각해보면 납득 할 수 있다.
	!주의 : agile이라는 말에 걸맞게 한 단계를 완료한다고 (예를 들어 디자인) 그 부분을 완벽하게 해놓는 것이 아니고, 진행에 따라 상세한 디자인을 추가하는 식으로 진행하게 된다.
	
	스크럼은 반복과 점진적 개발 방법에 기초한다. 스크럼 하나는 몇개의 이터레이션으로 이루어 지는데 이 이터레이션을 스프린트(sprint)라고 부른다. 스프린트는 1~4주의 시간을 가지는데, 정해진 시간은 변경하지 않는 것을 전제로 한다.
	또 스크럼은 고객의 요건으로부터 작성된 제품 백로그 라는 것을 가지고 있다. 대략적인 할 일 목록이다. 구현단계라면 요구사항 정의서 혹은 기술요구사항 정의서에 정의된 기능이나 구현 요구 사항이 제품 백로그로 적절할 것이다.
	각 스프린트는 팀 미팅을 통해 백로그 항목 중 우선순위가 높은 것을 선택하고, 구체적으로 수행하기 위해 태스크로 쪼갠다. 이 태스크들의 목록은 해당 스프린트에서 해야할 일로 정의되고 이 목록을 스프린트 백로그 라고 부른다.
	스프린트 백로그는 스케줄로 지정되어 팀의 담당자에게 할당된다.
	스프린트 중에는 매일 일일스크럼미팅을 통해 하루에 일과 태스크에 대한 문제점을 공유한다. 스프린트가 끝나면 해당 소프트웨어를 릴리즈한다.
	릴리즈가 끝난 후에는 이해 당사자 (stake holder)와 리뷰미팅을 가진다. 이 리뷰미팅의 결과를 제품 백로그에 업데이트하고 다음 스프린트를 준비한다. 스프린트가 끝나면 회고(retrospective)의 시간을 가진다. 스프린트에서 잘되었던 점, 잘못되었던 점을
	토론한다.

