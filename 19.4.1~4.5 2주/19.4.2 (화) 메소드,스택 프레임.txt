19.4.2 (화)

메인이 없으면 컴파일은 되지만 실행은 할 수 없다.
프로그램이 시작되면 메인으로 시작해서 메인으로 끝난다.

메소드method란? function, 함수, 클래스에서 기능을 담당하는 부분
 java는 메소드를 사용함으로써 코드의 재사용성을 높인다.
-메소드의 명명규칙은 식별자 규칙과 동일하다. 이름은 중복이 불가(*아래 참조) 하고 영문소문자로 시작하는 것이 약속이다.

메소드의 활용
-메소드들은 메인에서 호출해서 사용하는 것.
-메소드를 구현해 놓으면 몇번이든지 호출할 수 있다.
-메소드에서 다른 메소드를 호출할 수도 있다.
-메소드가 호출을 받으면 해당 메소드로 가서 실행한다. 끝나면 호출한 쪽(메인이 아니라!)으로 다시 돌아감
-메소드의 호출 : 메소드명(파라미터)

!메소드에게로 값을 전달하고자 한다면 parameter를 통해, 값을 받고자 한다면 return을 통해!
 - 파라미터란parameter? 매개변수, 인자
 호출측과 받는측이 동일한 자료형이어야 함.
 매개변수 설정은 갯수 상관없음. 콤마, 를 통해 여러가지를 받을 수 있음
 매개변수에는 순서가 있기 때문에 자료 대입도 같은 순서로 해야함.
 ex) public static void 메소드명(매개변수 or 인자 or parameter){
		실행문;
	}

return이란? 되돌려받는 값
 -return값을 활용하지 않아도 에러가 나진 않음.
 -메소드에서 return값을 반환하려고 할 경우 void의 위치에 return하려는 값과 동일한 자료형으로 설정해야함
 -얼마든지 다양하게 설정할 수 있는 매개변수와 같이 return값은 단 하나. 
 -모든 메소드는 return값이 있다. return의 value값이 있다면 void자리를 return과 같은 자료형으로 맞춰줘야함.
 -return문이 없으면 (ex : void문일때) return; 이 생략되어 있는 것이다.
 -return을 만나면 해당 메소드는 종료된다.

*메모리상에서 method가 작동하는 원리
 메모리는 클래스class영역, 스택stack영역, 힙heap영역으로 나뉜다. main문이 실행되면 stack영역에서 memory를
활용하기 시작하는데, method가 들어올 때 method를 위한 stack영역에 새로운 memory영역을 만들어 활용한다.
그 각각의 단위를 stack frame이라고 부른다. stack frame끼리의 우선순위는 바께스를 상상하면 된다.
│           │현재 사용되는 frame 을 활성스택프레임 active stack frame 이라고 부르고 그 순서는
│           │들어오는 순서대로 아래에 가고(1,2,3) 가장 위에있는 frame이 활성프레임이다.  
│           │
│--frame3---│
│---frame2--│
│----frame1-│<-stack 영역
──────────────

메소드 오버로드. (메소드 이름이 중복 가능한 경우)
 같은 이름을 가진 메소드를 만들 수 있다. 같은 기능을 하는데 String용, int용 다 따로 만들어서 이름을 달리붙이면
짜증나잖아.. 그래서 자바는 다른 인자를 가지고 같은 기능을 하는 메소드들의 이름을 통일할 수 있게 오버로드라는 기능을 제공한다. 
오버로딩을 할 수 있는 조건은 다음과 같다.
1.매개변수의 유무 (있는애와 없는애) 2. 매개변수의 갯수(서로 다른 parameter갯수를 가지고 있는 애들끼리) 3. 매개변수의 자료형
할 수 없는 조건?
1.return 자료형 (void부분이 다르다고 오버로드할수없음) 2. 접근제한권(public, protected, default, private)
허구한날 쓰는 System.out.println()이 overload된 대표적인 메소드이다.
println()안에 int값,string값,boolena값,char값 무엇을 넣든지 println() 메소드를 통해 처리가 가능하다.
그런데 println(10,20)식으로 매개변수를 두개 넣으면 에러가 나는데 println 메소드에 두개의인자까지 처리하는 메소드는 오버로드하지
않았기때문 ^.^;

실행파일 = 윈도우 batch script 리눅스 shall script

*cmd 명령어 mkdir 이름 = 디렉토리 폴더 만들기 / rmdir 이름 = 디렉토리 폴더 지우기 / echo = println과 동일
*bat 명령어 @echo off = 프로그램 명령문 출력 안되게 하기 echo 어쩌고 = 어쩌고 출력후 엔터
 / pause 실행후 바로 종료되는게 아니라 잠시 멈추게 (계속하려면 아무키나 누르십시오...출력됨)